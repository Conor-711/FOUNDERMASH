// SQLite database for local development
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Matchup {
  // pairKey is sorted 'a|b'
  pairKey String  @id
  aSlug   String
  bSlug   String
  votesA  Int     @default(0)
  votesB  Int     @default(0)

  @@index([aSlug, bSlug])
}

// Elo rating for ALL category (global)
model Elo {
  slug   String @id
  rating Int    @default(1000)
}

// Elo rating per track/category
model EloTrack {
  slug   String
  track  String
  rating Int    @default(1000)

  @@id([slug, track])
  @@index([track])
}

// Founder story submissions
model Submission {
  id        Int      @id @default(autoincrement())
  founder   String   // Founder's name
  nickname  String   // Founder's nickname
  email     String?  // Optional submitter email
  story     String   // The story content
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("submissions")
}

// User vote history for profile statistics
model UserVote {
  id         Int      @id @default(autoincrement())
  sessionId  String   // Browser session ID
  aSlug      String   // First founder in comparison
  bSlug      String   // Second founder in comparison  
  winner     String   // Which founder was chosen
  track      String   // Which track/category
  percentage Int      // What percentage chose the same founder at time of vote
  createdAt  DateTime @default(now())
  
  @@index([sessionId])
  @@index([winner])
  @@map("user_votes")
}

// Page view tracking
model PageView {
  id        Int      @id @default(autoincrement())
  page      String   // Page path (e.g., "/", "/ranking", "/founder/jason-zhao")
  sessionId String?  // Browser session ID
  userAgent String?  // Browser user agent
  referrer  String?  // Referrer URL
  createdAt DateTime @default(now())
  
  @@index([page])
  @@index([sessionId])
  @@index([createdAt])
  @@map("page_views")
}

// Click event tracking
model ClickEvent {
  id        Int      @id @default(autoincrement())
  eventType String   // Event type (e.g., "founder_select", "category_change", "nav_click")
  target    String?  // Target element (e.g., founder slug, category name)
  page      String   // Page where the event occurred
  sessionId String?  // Browser session ID
  metadata  String?  // Additional data as JSON string
  createdAt DateTime @default(now())
  
  @@index([eventType])
  @@index([target])
  @@index([sessionId])
  @@index([createdAt])
  @@map("click_events")
}

